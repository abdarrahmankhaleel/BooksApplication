@using Infrastructure.ViewModel
@model ViewModelBooks
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = "Book";
}

<style>
        /* Style the tab */
    .tab {
      overflow: hidden;
      border: 1px solid #ccc;
      background-color: #f1f1f1;
    }

    /* Style the buttons that are used to open the tab content */
    .tab button {
      background-color: inherit;
      float: left;
      border: none;
      outline: none;
      cursor: pointer;
      padding: 14px 16px;
      transition: 0.3s;
    }

    /* Change background color of buttons on hover */
    .tab button:hover {
      background-color: #ddd;
    }

    /* Create an active/current tablink class */
    .tab button.active {
      background-color: #ccc;
    }

    /* Style the tab content */
    .tabcontent {
      display: none;
      padding: 6px 12px;
      border: 1px solid #ccc;
      border-top: none;
    }
</style>

<div class="wrapper">
    <!--Content-Header-->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">@ResourceWeb.lbBooks</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/Admin/Home/Index">@ResourceWeb.lbHomePage</a></li>
                        <li class="breadcrumb-item active">@ResourceWeb.lbManageBook</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!--End Content-Header-->
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex align-items-center justify-content-start">
                        <h3 class="card-title" style="margin-left:20px">@ResourceWeb.lbBooks</h3>
                        <div class="card-tools">
                            <!-- Button trigger modal -->
                            <button type="button" onclick="Reset()" style="margin-top:-5px"
                                    class="btn btn-outline-primary rounded-pill" data-bs-toggle="modal" data-bs-target="#BookModal">
                                @ResourceWeb.lbbtnSaveNewBook
                            </button>
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <!-- Tab links -->
                        <div class="tab">
                            <button class="tablinks" onclick="openTab(event, 'SubCategories')" id="defaultOpen">@ResourceWeb.lbBooks</button>
                            <button class="tablinks" onclick="openTab(event, 'LogsSubCategories')">@ResourceWeb.lbLogsBooks</button>
                        </div>

                        <!-- Tab content -->
                        <div id="SubCategories" class="tabcontent">
                            <table id="tableSubCategory" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <td>@ResourceWeb.lbNameBook</td>
                                        <td>اسم المؤلف</td>
                                        <td>الفئة</td>
                                        <td>الفئة الفرعية</td>
                                        <td>@ResourceWeb.lbEvents</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.LstBooks)
                                    {
                                        <tr>
                                            <td>
                                                @item.Name
                                            </td>
                                             <td>
                                                @item.Author
                                            </td>
                                             <td>
                                                @item.Category.Name
                                            </td>
                                             <td>
                                                @item.SubCategory.Name
                                            </td>

                                            <td>
                                                <input type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#BookModal"
                                                   onclick="Edit('@item.Id','@item.Name','@item.CategoryId','@item.CurrentState')" value="@ResourceWeb.lbbtnEdit" />|
                                                <input type="button" class="btn btn-danger btn-sm" onclick="Delete('@item.Id')" value="@ResourceWeb.lbbtnDelete" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div id="LogsSubCategories" class="tabcontent">
                            <table id="tableLogSubCategory" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <td>#</td>
                                        <td>@ResourceWeb.lbNameBook</td>
                                        <td>@ResourceWeb.lbActionName</td>
                                        <td>@ResourceWeb.lbDate</td>
                                        <td>@ResourceWeb.lbUserName</td>
                                        <td>@ResourceWeb.lbEvents</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.LstLogBooks)
                                    {
                                        <tr>
                                            <td>#</td>
                                            <td>@item.Book.Name</td>
                                            <td>
                                                @switch (item.Action)
                                                {
                                                    case "Save":
                                                        <span class="badge badge-success">@item.Action</span>
                                                        break;
                                                    case "Delete":
                                                        <span class="badge badge-danger">@item.Action</span>
                                                        break;
                                                    case "Update":
                                                        <span class="badge badge-warning">@item.Action</span>
                                                        break;
                                                    default:
                                                        @item.Action
                                                        break;
                                                }
                                            </td>
                                            <td>@item.Date</td>
                                            <td>@((await userManager.GetUserAsync(User)).Name)</td>
                                            <td>
                                                <input type="button" class="btn btn-danger btn-sm" onclick="DeleteLog('@item.Id')" value="@ResourceWeb.lbbtnDelete" />

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>

<!-- Modal -->
<div class="modal fade" id="BookModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog card card-success card-outline">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titleModel">@ResourceWeb.lbTitleAddBook</h5>
                <a href="#" class="btn-close" data-bs-dismiss="modal" aria-label="Close">x</a>
            </div>
            <div class="modal-body">
                <form asp-action="Save" asp-controller="Books" method="post"
                      enctype="multipart/form-data">
                    <input asp-for="Book.Id" type="hidden" id="BookId" />
                    <input asp-for="Book.CurrentState" type="hidden" id="subCurrentState" />
                    <div class="form-group">
                        <label asp-for="Book.Name" class="control-labal">@ResourceWeb.lbNameBook</label>
                        <input asp-for="Book.Name" type="text" class="form-control" id="bookName" />
                        <span asp-validation-for="Book.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Book.Author" class="control-labal">Author Name</label>
                        <input asp-for="Book.Author" type="text" class="form-control" id="AuthorName" />
                        <span asp-validation-for="Book.Author" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Book.Description" class="control-labal">Description</label>
                        <input asp-for="Book.Description" type="text" class="form-control" id="desc" />
                        <span asp-validation-for="Book.Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Book.CategoryId" class="control-labal">@ResourceWeb.lbNameCategory</label>
                        <select asp-for="Book.CategoryId" asp-items="@(new SelectList(ViewBag.lstCategories,"Id","Name"))" class="form-control" id="categoryIdOfSubCateg">
                            <option value="">@ResourceWeb.lbSelectCategory</option>
                        </select>
                        <span asp-validation-for="Book.CategoryId" class="text-danger"></span>
                    </div>
                     <div class="form-group">
                        <label asp-for="Book.SubCategoryId" class="control-labal">@ResourceWeb.lbNameCategory الفرعية</label>
                        <select asp-for="Book.SubCategoryId" class="form-control" id="subCategoryId">
                            <option value="">@ResourceWeb.lbSelectCategory</option>
                        </select>
                        <span asp-validation-for="Book.SubCategoryId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="CoverImage"></label>
                        <input asp-for="CoverImage" type="file" />
                    </div>
                    <div class="modal-footer-rtl">
                        <input type="submit" class="btn btn-primary" id="btnSubmit" value="@ResourceWeb.lbbtnSave" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

@section Scripts
{
 
    <partial name="_SwalAlert" />
    <partial name="_ResourseForJs" />
   <script>
       document.getElementById("defaultOpen").click();
        function openTab(evt, tapName) {

            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the button that opened the tab
            document.getElementById(tapName).style.display = "block";
            evt.currentTarget.className += " active";
        }

       
   </script>
   <script>
        let lbTitleAddBook = '@Html.Raw(ResourceWeb.lbTitleAddBook)';
    </script>
    <script src="~/Modules/Book.js"></script>
    @*<script>
        $(document).ready(function () {
            $('#categoryIdOfSubCateg').change(function () {
                console.log("um here");
                var categoryId = $(this).val();
                if (categoryId) {
                    $.ajax({
                        type: 'GET',
                        url: '/Admin/Books/GetSubcategories',
                        data: { categoryId: categoryId },
                        success: function (data) {
                            console.log(data);
                            $('#subCategoryId').empty();
                            $('#subCategoryId').append($('<option>').text("chooose the sub category ... ").attr('value',""));
                            $.each(data, function (index, subcategory) {
                                $('#subCategoryId').append($('<option>').text(subcategory.name).attr('value', subcategory.id));
                            });
                        },
                        error: function (error) {
                            console.log(error);
                            alert('An error occurred while retrieving the subcategories.');
                        }
                    });
                } else {
                    $('#subCategoryId').empty();
                }
            });
        });
    </script>*@
    @*
        let lbEditSubCateg = '@Html.Raw(ResourceWeb.lbTitleEditBook)'
        let lbTitleMsgDelete = '@Html.Raw(ResourceWeb.lbTitleMsgDelete)'
        let lbTextMsgDelete = '@Html.Raw(ResourceWeb.lbTextMsgDelete)'
        let lbconfirmButtonText = '@Html.Raw(ResourceWeb.lbconfirmButtonText)'
        let lbcancelButtonText = '@Html.Raw(ResourceWeb.lbcancelButtonText)'
        let lbTitleDeletedOk = '@Html.Raw(ResourceWeb.lbTitleDeletedOk)';
        let lbSuccess = '@Html.Raw(Helper.Success)'*@
    
}

